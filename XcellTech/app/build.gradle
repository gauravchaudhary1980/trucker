apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.letsgo.letsgo"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    useLibrary 'org.apache.http.legacy'
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'
    compile 'com.android.support:support-v4:23.4.0'
    compile 'com.android.support:recyclerview-v7:23.4.0'
    compile files('libs/mantra.mfs100.jar')
    compile files('libs/activation.jar')
    compile files('libs/additionnal.jar')
    compile files('libs/mail.jar')
    compile "org.apache.httpcomponents:httpcore:4.3.2"
}

task copyJniLibs1(type: Copy) {
    from 'libs/armeabi'
    into 'src/main/jniLibs/armeabi'
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(copyJniLibs1)
}
task copyJniLibs2(type: Copy) {
    from 'libs/armeabi-v7a'
    into 'src/main/jniLibs/armeabi-v7a'
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(copyJniLibs2)
}
clean.dependsOn 'copyJniLibs1'
clean.dependsOn 'copyJniLibs2'
